{"ast":null,"code":"var _jsxFileName = \"D:\\\\Logistics1Hospital\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\n// Predefined users for the system\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USERS = {\n  admin: {\n    username: 'admin',\n    password: 'admin123',\n    role: 'Admin',\n    name: 'System Administrator',\n    email: 'admin@logistics1.com',\n    isActive: true,\n    // Always active - cannot be deactivated\n    permissions: ['all']\n  },\n  manager1: {\n    username: 'manager1',\n    password: 'manager123',\n    role: 'Manager',\n    name: 'John Manager',\n    email: 'manager@logistics1.com',\n    isActive: true,\n    permissions: ['view_all', 'approve_requests', 'analytics']\n  },\n  employee1: {\n    username: 'employee1',\n    password: 'employee123',\n    role: 'Employee',\n    name: 'Sarah Warehouse',\n    email: 'employee@logistics1.com',\n    isActive: true,\n    permissions: ['sws_module', 'rfid_scan', 'inventory_manage']\n  },\n  procurement1: {\n    username: 'procurement1',\n    password: 'procurement123',\n    role: 'Procurement Staff',\n    name: 'Mike Procurement',\n    email: 'procurement@logistics1.com',\n    isActive: true,\n    permissions: ['psm_module', 'supplier_manage', 'purchase_orders']\n  },\n  project1: {\n    username: 'project1',\n    password: 'project123',\n    role: 'Project Manager',\n    name: 'Lisa Project',\n    email: 'project@logistics1.com',\n    isActive: true,\n    permissions: ['plt_module', 'project_tracking', 'resource_assign']\n  },\n  maintenance1: {\n    username: 'maintenance1',\n    password: 'maintenance123',\n    role: 'Maintenance Staff',\n    name: 'David Maintenance',\n    email: 'maintenance@logistics1.com',\n    isActive: true,\n    permissions: ['alms_module', 'asset_tracking', 'maintenance_logs']\n  },\n  document1: {\n    username: 'document1',\n    password: 'document123',\n    role: 'Document Analyst',\n    name: 'Emma Document',\n    email: 'document@logistics1.com',\n    isActive: true,\n    permissions: ['dtrs_module', 'document_upload', 'record_verify']\n  }\n};\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const savedUser = localStorage.getItem('logistics_user');\n    if (savedUser) {\n      try {\n        const userData = JSON.parse(savedUser);\n        // Verify user is still active\n        const currentUser = USERS[userData.username];\n        if (currentUser && currentUser.isActive) {\n          setUser(userData);\n        } else {\n          localStorage.removeItem('logistics_user');\n        }\n      } catch (error) {\n        localStorage.removeItem('logistics_user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = (username, password) => {\n    const user = USERS[username];\n    if (user && user.password === password && user.isActive) {\n      const userData = {\n        username: user.username,\n        role: user.role,\n        name: user.name,\n        email: user.email,\n        permissions: user.permissions\n      };\n      setUser(userData);\n      localStorage.setItem('logistics_user', JSON.stringify(userData));\n\n      // Log the login activity\n      logActivity(user.username, 'LOGIN', 'User logged in successfully');\n      return {\n        success: true,\n        user: userData\n      };\n    }\n    return {\n      success: false,\n      error: 'Invalid credentials or inactive account'\n    };\n  };\n  const logout = () => {\n    if (user) {\n      logActivity(user.username, 'LOGOUT', 'User logged out');\n    }\n    setUser(null);\n    localStorage.removeItem('logistics_user');\n  };\n  const updateUserStatus = (username, isActive) => {\n    if (USERS[username]) {\n      // Prevent admin from being deactivated\n      if (username === 'admin' && !isActive) {\n        alert('Admin account cannot be deactivated for security reasons.');\n        return;\n      }\n      USERS[username].isActive = isActive;\n      // If deactivating current user, log them out\n      if (user && user.username === username && !isActive) {\n        logout();\n      }\n    }\n  };\n  const getAllUsers = () => {\n    return Object.values(USERS).map(user => ({\n      username: user.username,\n      role: user.role,\n      name: user.name,\n      email: user.email,\n      isActive: user.isActive,\n      lastLogin: getLastLogin(user.username)\n    }));\n  };\n  const logActivity = (username, action, description) => {\n    const activity = {\n      id: Date.now(),\n      username,\n      action,\n      description,\n      timestamp: new Date().toISOString()\n    };\n    const activities = JSON.parse(localStorage.getItem('system_activities') || '[]');\n    activities.unshift(activity);\n    // Keep only last 100 activities\n    if (activities.length > 100) {\n      activities.splice(100);\n    }\n    localStorage.setItem('system_activities', JSON.stringify(activities));\n  };\n  const getLastLogin = username => {\n    const activities = JSON.parse(localStorage.getItem('system_activities') || '[]');\n    const loginActivity = activities.find(activity => activity.username === username && activity.action === 'LOGIN');\n    return loginActivity ? loginActivity.timestamp : null;\n  };\n  const getSystemActivities = () => {\n    return JSON.parse(localStorage.getItem('system_activities') || '[]');\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    loading,\n    updateUserStatus,\n    getAllUsers,\n    logActivity,\n    getSystemActivities\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","USERS","admin","username","password","role","name","email","isActive","permissions","manager1","employee1","procurement1","project1","maintenance1","document1","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","savedUser","localStorage","getItem","userData","JSON","parse","currentUser","removeItem","error","login","setItem","stringify","logActivity","success","logout","updateUserStatus","alert","getAllUsers","Object","values","map","lastLogin","getLastLogin","action","description","activity","id","Date","now","timestamp","toISOString","activities","unshift","length","splice","loginActivity","find","getSystemActivities","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Logistics1Hospital/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\n// Predefined users for the system\r\nconst USERS = {\r\n  admin: {\r\n    username: 'admin',\r\n    password: 'admin123',\r\n    role: 'Admin',\r\n    name: 'System Administrator',\r\n    email: 'admin@logistics1.com',\r\n    isActive: true, // Always active - cannot be deactivated\r\n    permissions: ['all']\r\n  },\r\n  manager1: {\r\n    username: 'manager1',\r\n    password: 'manager123',\r\n    role: 'Manager',\r\n    name: 'John Manager',\r\n    email: 'manager@logistics1.com',\r\n    isActive: true,\r\n    permissions: ['view_all', 'approve_requests', 'analytics']\r\n  },\r\n  employee1: {\r\n    username: 'employee1',\r\n    password: 'employee123',\r\n    role: 'Employee',\r\n    name: 'Sarah Warehouse',\r\n    email: 'employee@logistics1.com',\r\n    isActive: true,\r\n    permissions: ['sws_module', 'rfid_scan', 'inventory_manage']\r\n  },\r\n  procurement1: {\r\n    username: 'procurement1',\r\n    password: 'procurement123',\r\n    role: 'Procurement Staff',\r\n    name: 'Mike Procurement',\r\n    email: 'procurement@logistics1.com',\r\n    isActive: true,\r\n    permissions: ['psm_module', 'supplier_manage', 'purchase_orders']\r\n  },\r\n  project1: {\r\n    username: 'project1',\r\n    password: 'project123',\r\n    role: 'Project Manager',\r\n    name: 'Lisa Project',\r\n    email: 'project@logistics1.com',\r\n    isActive: true,\r\n    permissions: ['plt_module', 'project_tracking', 'resource_assign']\r\n  },\r\n  maintenance1: {\r\n    username: 'maintenance1',\r\n    password: 'maintenance123',\r\n    role: 'Maintenance Staff',\r\n    name: 'David Maintenance',\r\n    email: 'maintenance@logistics1.com',\r\n    isActive: true,\r\n    permissions: ['alms_module', 'asset_tracking', 'maintenance_logs']\r\n  },\r\n  document1: {\r\n    username: 'document1',\r\n    password: 'document123',\r\n    role: 'Document Analyst',\r\n    name: 'Emma Document',\r\n    email: 'document@logistics1.com',\r\n    isActive: true,\r\n    permissions: ['dtrs_module', 'document_upload', 'record_verify']\r\n  }\r\n};\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on app start\r\n    const savedUser = localStorage.getItem('logistics_user');\r\n    if (savedUser) {\r\n      try {\r\n        const userData = JSON.parse(savedUser);\r\n        // Verify user is still active\r\n        const currentUser = USERS[userData.username];\r\n        if (currentUser && currentUser.isActive) {\r\n          setUser(userData);\r\n        } else {\r\n          localStorage.removeItem('logistics_user');\r\n        }\r\n      } catch (error) {\r\n        localStorage.removeItem('logistics_user');\r\n      }\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = (username, password) => {\r\n    const user = USERS[username];\r\n    \r\n    if (user && user.password === password && user.isActive) {\r\n      const userData = {\r\n        username: user.username,\r\n        role: user.role,\r\n        name: user.name,\r\n        email: user.email,\r\n        permissions: user.permissions\r\n      };\r\n      \r\n      setUser(userData);\r\n      localStorage.setItem('logistics_user', JSON.stringify(userData));\r\n      \r\n      // Log the login activity\r\n      logActivity(user.username, 'LOGIN', 'User logged in successfully');\r\n      \r\n      return { success: true, user: userData };\r\n    }\r\n    \r\n    return { success: false, error: 'Invalid credentials or inactive account' };\r\n  };\r\n\r\n  const logout = () => {\r\n    if (user) {\r\n      logActivity(user.username, 'LOGOUT', 'User logged out');\r\n    }\r\n    setUser(null);\r\n    localStorage.removeItem('logistics_user');\r\n  };\r\n\r\n  const updateUserStatus = (username, isActive) => {\r\n    if (USERS[username]) {\r\n      // Prevent admin from being deactivated\r\n      if (username === 'admin' && !isActive) {\r\n        alert('Admin account cannot be deactivated for security reasons.');\r\n        return;\r\n      }\r\n      USERS[username].isActive = isActive;\r\n      // If deactivating current user, log them out\r\n      if (user && user.username === username && !isActive) {\r\n        logout();\r\n      }\r\n    }\r\n  };\r\n\r\n  const getAllUsers = () => {\r\n    return Object.values(USERS).map(user => ({\r\n      username: user.username,\r\n      role: user.role,\r\n      name: user.name,\r\n      email: user.email,\r\n      isActive: user.isActive,\r\n      lastLogin: getLastLogin(user.username)\r\n    }));\r\n  };\r\n\r\n  const logActivity = (username, action, description) => {\r\n    const activity = {\r\n      id: Date.now(),\r\n      username,\r\n      action,\r\n      description,\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    const activities = JSON.parse(localStorage.getItem('system_activities') || '[]');\r\n    activities.unshift(activity);\r\n    // Keep only last 100 activities\r\n    if (activities.length > 100) {\r\n      activities.splice(100);\r\n    }\r\n    localStorage.setItem('system_activities', JSON.stringify(activities));\r\n  };\r\n\r\n  const getLastLogin = (username) => {\r\n    const activities = JSON.parse(localStorage.getItem('system_activities') || '[]');\r\n    const loginActivity = activities.find(activity => \r\n      activity.username === username && activity.action === 'LOGIN'\r\n    );\r\n    return loginActivity ? loginActivity.timestamp : null;\r\n  };\r\n\r\n  const getSystemActivities = () => {\r\n    return JSON.parse(localStorage.getItem('system_activities') || '[]');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    logout,\r\n    loading,\r\n    updateUserStatus,\r\n    getAllUsers,\r\n    logActivity,\r\n    getSystemActivities\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}